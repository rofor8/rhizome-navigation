<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style> 
  
  body { 
    margin: 0; 
    user-select: none;
    touch-action: none;
  } 
  
.canvas {
  overflow-y: scroll;
  color: blanchedalmond;
}

  .info-window {
  position: fixed;
  bottom: 5%;
  left: 5%;
  right: 5%;
  background: rgba(0, 0, 0, 0.651);
  border: 1px solid black;
  padding: 1px;
  height:20%;
  width: 100%;
  color:blanchedalmond;
  font-size: 1em;
  overflow-y: scroll;
}
  

  </style>

  <script src="//unpkg.com/three"></script>
  <script src="//unpkg.com/3d-force-graph"></script>
  <!--<script src="../../dist/3d-force-graph.js"></script>-->
</head>

<body>
  <div id="3d-graph"></div>
   <!-- Create a container element for the info windows -->
  <div id="info-windows"></div>
  <div id="info-window" class="info-window" style="display:none;"></div>
  <script>
   

    // Random connected graph
    const gData = {
      nodes: [
      { id: 'podman', img:'podman.jpg', label: 'podman' },
      { id: 'fedora', img:'fedora.jpg', label: 'fedora' },
      { id: 'postgis', img:'postgis.jpg', label: 'postgis' },
      { id: 'qgis', img:'qgis.jpg', label: 'qgis' },
      { id: 'grasshopper', img:'grasshopper.jpg', label: 'grasshopper' },
      { id: 'cisco', img:'cisco.jpg', label: 'cisco' },
      { id: 'mastermap', img:'mastermap.jpg', label: 'mastermap' },
      { id: 'coreos', img:'coreos.jpg', label: 'coreos' },
      { id: 'kvm', img:'kvm.jpg', label: 'kvm' },
      { id: 'influxdb', img:'influxdb.jpg', label: 'influxdb' },
      { id: 'leaflet', img:'leaflet.jpg', label: 'leaflet' },
      { id: 'gdal', img:'gdal.jpg', label: 'gdal' },
      { id: 'python', img:'python.jpg', label: 'python' },
      { id: 'arcgis', img:'arcgis.jpg', label: 'arcgis' },
      { id: 'mapbox', img:'mapbox.jpg', label: 'mapbox' },
      { id: 'github', img:'github.jpg', label: 'github' },
      { id: 'mqtt', img:'mqtt.jpg', label: 'mqtt' },
      { id: 'ruckus', img:'ruckus.jpg', label: 'ruckus' },
      { id: 'mikrotik', img:'mikrotik.jpg', label: 'mikrotik' },
      { id: 'bash', img:'bash.jpg', label: 'bash' },
      { id: 'ladybug', img:'ladybug.jpg', label: 'ladybug' },
      { id: 'canbus', img:'canbus.jpg', label: 'canbus' },
      { id: 'sql', img:'sql.jpg', label: 'sql' },
      { id: 'javascript', img:'javascript.jpg', label: 'javascript' },
      { id: 'lidar', img:'lidar.jpg', label: 'lidar' },
      { id: 'windsor', img:'windsor.jpg', label: 'windsor' },
      { id: 'window', img:'window.jpg', label: 'window' },
      { id: 'sun', img:'sun.jpg', label: 'sun' },
      { id: 'corridor', img:'corridor.jpg', label: 'corridor' },
      { id: 'van', img:'van.jpg', label: 'van' },
      { id: 'stage', img:'stage.jpg', label: 'stage' },
      { id: 'pudding', img:'pudding.jpg', label: 'pudding' },
      { id: 'parish', img:'parish.jpg', label: 'parish' },
      { id: 'parcel', img:'parcel.jpg', label: 'parcel' },
      { id: 'node', img:'node.jpg', label: 'node' },
      { id: 'egg', img:'egg.jpg', label: 'egg' },
      { id: 'dymaxion', img:'dymaxion.jpg', label: 'dymaxion' },
      { id: 'concentrator', img:'concentrator.jpg', label: 'concentrator' },
      { id: 'clamp', img:'clamp.jpg', label: 'clamp' },
      { id: 'bha', img:'bha.jpg', label: 'bha' },
      { id: 'aonb', img:'aonb.jpg', label: 'aonb' },
      { id: 'podman', markdownFile: 'md/podman.md', img:'podman.jpg', label: 'podman' },
{ id: 'fedora', markdownFile: 'md/fedora.md', img:'fedora.jpg', label: 'fedora' },
{ id: 'postgis', markdownFile: 'md/postgis.md', img:'postgis.jpg', label: 'postgis' },
{ id: 'qgis', markdownFile: 'md/qgis.md', img:'qgis.jpg', label: 'qgis' },
{ id: 'grasshopper', markdownFile: 'md/grasshopper.md', img:'grasshopper.jpg', label: 'grasshopper' },
{ id: 'cisco', markdownFile: 'md/cisco.md', img:'cisco.jpg', label: 'cisco' },
{ id: 'mastermap', markdownFile: 'md/mastermap.md', img:'mastermap.jpg', label: 'mastermap' },
{ id: 'coreos', markdownFile: 'md/coreos.md', img:'coreos.jpg', label: 'coreos' },
{ id: 'kvm', markdownFile: 'md/kvm.md', img:'kvm.jpg', label: 'kvm' },
{ id: 'influxdb', markdownFile: 'md/influxdb.md', img:'influxdb.jpg', label: 'influxdb' },
{ id: 'leaflet', markdownFile: 'md/leaflet.md', img:'leaflet.jpg', label: 'leaflet' },
{ id: 'gdal', markdownFile: 'md/gdal.md', img:'gdal.jpg', label: 'gdal' },
{ id: 'python', markdownFile: 'md/python.md', img:'python.jpg', label: 'python' },
{ id: 'arcgis', markdownFile: 'md/arcgis.md', img:'arcgis.jpg', label: 'arcgis' },
{ id: 'mapbox', markdownFile: 'md/mapbox.md', img:'mapbox.jpg', label: 'mapbox' },
{ id: 'github', markdownFile: 'md/github.md', img:'github.jpg', label: 'github' },
{ id: 'mqtt', markdownFile: 'md/mqtt.md', img:'mqtt.jpg', label: 'mqtt' },
{ id: 'ruckus', markdownFile: 'md/ruckus.md', img:'ruckus.jpg', label: 'ruckus' },
{ id: 'mikrotik', markdownFile: 'md/mikrotik.md', img:'mikrotik.jpg', label: 'mikrotik' },
{ id: 'bash', markdownFile: 'md/bash.md', img:'bash.jpg', label: 'bash' },
{ id: 'ladybug', markdownFile: 'md/ladybug.md', img:'ladybug.jpg', label: 'ladybug' }
    ],
      links: [
      { source: 'qgis', target: 'fedora' },
      { source: 'kvm', target: 'cisco' },
      { source: 'python', target: 'mqtt' },
      { source: 'fedora', target: 'coreos' },
      { source: 'influxdb', target: 'mqtt' },
      { source: 'javascript', target: 'leaflet' },
      { source: 'postgis', target: 'mastermap' },
      { source: 'qgis', target: 'postgis' },
      { source: 'postgis', target: 'gdal' },
      { source: 'python', target: 'gdal' },
      { source: 'podman', target: 'influxdb' },
      { source: 'mapbox', target: 'arcgis' },
      { source: 'podman', target: 'fedora' },
      { source: 'lidar', target: 'gdal' },
      { source: 'qgis', target: 'lidar' },
      { source: 'mastermap', target: 'postgis' },
      { source: 'bash', target: 'fedora' },
      { source: 'leaflet', target: 'mapbox' },
      { source: 'qgis', target: 'fedora' },
      { source: 'kvm', target: 'fedora' },
      { source: 'qgis', target: 'postgis' },
      { source: 'mqtt', target: 'postgis' },
      { source: 'qgis', target: 'postgis' },
      { source: 'python', target: 'postgis' },
      { source: 'mikrotik', target: 'fedora' },
      { source: 'leaflet', target: 'github' },
      { source: 'qgis', target: 'fedora' },
      { source: 'coreos', target: 'gdal' },
      { source: 'mapbox', target: 'postgis' },
      { source: 'grasshopper', target: 'postgis' },
      { source: 'ruckus', target: 'mikrotik' },
      { source: 'mikrotik', target: 'mikrotik' },
      { source: 'ladybug', target: 'grasshopper' },
      { source: 'canbus', target: 'mqtt' },
      { source: 'sql', target: 'mastermap' },
      { source: 'sql', target: 'lidar' },
      { source: 'python', target: 'mastermap' },
      { source: 'sql', target: 'postgis' },
      { source: 'python', target: 'influxdb' },
      { source: 'windsor', target: 'arcgis' },
      { source: 'window', target: 'grasshopper' },
      { source: 'sun', target: 'ladybug' },
      { source: 'corridor', target: 'mastermap' },
      { source: 'corridor', target: 'qgis' },
      { source: 'corridor', target: 'sql' },
      { source: 'van', target: 'grasshopper' },
      { source: 'stage', target: 'grasshopper' },
      { source: 'pudding', target: 'qgis' },
      { source: 'parish', target: 'sql' },
      { source: 'parish', target: 'mastermap' },
      { source: 'parcel', target: 'sql' },
      { source: 'node', target: 'grasshopper' },
      { source: 'egg', target: 'grasshopper' },
      { source: 'dymaxion', target: 'grasshopper' },
      { source: 'concentrator', target: 'grasshopper' },
      { source: 'concentrator', target: 'ladybug' },
      { source: 'clamp', target: 'ruckus' },
      { source: 'mikrotik', target: 'ruckus' },
      { source: 'mikrotik', target: 'cisco' },
      { source: 'bha', target: 'qgis' },
      { source: 'aonb', target: 'qgis' }
    ]
    };
// node text
    const nodeInfo = {
        'podman': "Podman is a tool for running and managing Linux containers. It can be used to create, run, and manage containerized applications on a system.",
        'postgis': "PostGIS is an extension to the PostgreSQL database management system that adds support for geographic objects such as points, lines, and polygons. It is commonly used to store and manage spatial data in a database.",
        'qgis': "QGIS is a free and open-source geographic information system (GIS) software that allows users to create, edit, visualize, and analyze spatial data.",
        'grasshopper':  "Grasshopper is a graphical algorithm editor for the design of parametric models in the computer-aided design (CAD) software Rhinoceros 3D. It is used to create complex 3D shapes and forms.",
        'cisco':  "Cisco is a leading technology company that provides a wide range of products and services for networking, security, and collaboration. Its products are widely used in businesses, schools, and other organizations around the world.",
        'mastermap':  "MasterMap is a comprehensive digital mapping product produced by Ordnance Survey, the national mapping agency of Great Britain. It provides detailed and accurate mapping data for a range of applications, including land use planning, environmental management, and transportation.",
        'coreos':  "CoreOS is a Linux-based operating system designed specifically for running containerized applications at scale. It is optimized for use in cloud environments and is known for its security and reliability.",
        'kvm':  "KVM (Kernel-based Virtual Machine) is a virtualization technology that allows multiple operating systems to run on the same physical hardware. It is commonly used to create virtual servers and other virtualized environments.",
        'influxdb':  "InfluxDB is an open-source time series database used to store and analyze time-stamped data. It is often used to store and analyze data from sensors, IoT devices, and other systems that generate large amounts of time-series data.",
        'leaflet':  "Leaflet is an open-source JavaScript library for creating interactive maps on the web. It is widely used by developers to create mapping applications for websites and mobile devices.",
        'gdal':  "gdal is a command-line tool for converting between different vector and raster geospatial data formats. It is commonly used to convert data from one format to another for use in different software programs or systems.",
        'python':  "Python is a popular programming language known for its simplicity, readability, and flexibility. It is widely used in a variety of applications, including web development, scientific computing, and data analysis.",
        'arcgis':  "ArcGIS is a suite of software products produced by Esri for creating, managing, analyzing, and sharing geographic data. It is widely used in a variety of industries, including government, utilities, and natural resources.",
        'mapbox':  "Mapbox is a provider of custom online maps for websites and mobile applications. It offers a variety of tools and APIs for creating and customizing maps, as well as for integrating maps into applications.",
        'github':  "GitHub is a platform for hosting and collaborating on software projects. It is widely used by developers to store, share, and manage code repositories, as well as to track and resolve issues related to their projects.",
        'mqtt':  "MQTT (Message Queue Telemetry Transport) is a lightweight protocol for sending and receiving data between devices and servers. It is commonly used in IoT applications to send data from sensors and other",
        'mikrotik':  "Mikrotik is a Latvian networking equipment manufacturer that produces routers, switches, and other networking products. Its products are used in a variety of applications, including internet service provider networks and enterprise networks.",
        'bash':  "Bash is a Unix shell and command-line interpreter that is widely used in Linux and other Unix-like operating systems. It allows users to enter commands to perform tasks on the computer, such as managing files, running programs, and configuring system settings.",
        'ladybug':  "Ladybug is a plugin for the 3D design software Grasshopper that allows users to perform energy analysis and daylight simulations on their designs. It is used to optimize the energy efficiency and sustainability of buildings and other structures.",
        'raspberypi':  "Raspberry Pi is a small, low-cost computer that is popular with hobbyists, educators, and developers. It is often used for projects such as building home media centers, creating custom gaming systems, and developing Internet of Things (IoT) devices.",
        'canbus':  "CANbus (Controller Area Network bus) is a computer network used in vehicles to allow various systems and devices to communicate with each other. It is commonly used in automotive and industrial applications to exchange data between sensors, controllers, and other devices.",
        'sql':  "SQL (Structured Query Language) is a programming language used to manage and manipulate data stored in relational databases. It is widely used in business and other organizations to store, retrieve, and analyze large amounts of data.",
        'ruckus':  "Ruckus is a brand of networking equipment produced by Arris. It offers a range of products for building and managing wireless networks, including access points, controllers, and switches.",
        'fedora': "Fedora is a popular open-source operating system based on the Linux kernel. It is known for its stability and security features, and is often used as a platform for software development.",
        'windsor' : "The Royal Windsor Horse Show is an annual event that attracts thousands of visitors and is the largest outdoor horse show in the United Kingdom. In order to ensure that the event runs smoothly, it is important to provide reliable connectivity to the staff and trader areas. To achieve this, our team deployed a wireless network on the show grounds and created a heat map by taking geolocated signal strength readings on a smartphone from all over the site. This data was then uploaded into ArcGIS and used to create a heat map, which highlighted areas with weak signal strength or wireless black spots. To help visualize the network and identify any potential issues, the heat map was overlaid on a georeferenced site map that showed the locations of wireless access points, cable routes, and network switch locations. By using this information, we were able to ensure that the staff and trader areas had the necessary connectivity to support the needs of the event. Overall, the deployment of the wireless network at the Royal Windsor Horse Show was a success and played a vital role in the smooth running of the event. We are proud to have been able to support the needs of the staff and traders and help make the event a success.",
        'window': "",
        'sun':  "",
        'corridor':  "",
        'stage':  "We were commissioned to design and construct a circular stage for a Cyr wheel performance in Gifford's Circus. The stage had to meet several requirements: it had to have a diameter of 6 meters, be able to be disassembled into pieces small enough to fit through a door with a width of 2.6 meters, be able to support the weight of performers, be easy to assemble by two people in a short amount of time (with each panel weighing no more than 50kg), be flat and level on rough ground, and be durable enough to withstand the rough handling and moisture of circus life. To achieve these goals, we considered various designs for the circle and ultimately settled on a composite panel made of an XPS core sandwiched between two layers of extra durable fibreglass, with a non-slip coating. The material was cut into the necessary shapes using a hot wire cutter with a rectangular profile, and the foam was removed from the mating edges, leaving only the outer fibreglass material. Adhesive was applied and aluminum extrusion was pressed into the edges of the panels. The aluminum provided protection for the edges, supported the edges to prevent deflection, and provided slots for the removable leg structures that connected the panels together. The leg structures were placed at the intersection of three panels and consisted of three pieces of steel box section fitted within aluminum U channels and welded at 120-degree increments to form a three-directional cross. A hole was left at the intersection, into which a threaded tube was welded. An internal hex bolt or long grub screw with a foot plate on the bottom was threaded into the tube and could be adjusted from above through a small hole in the stage using an allen key bit on an impact driver. This arrangement allowed for a quick and easy assembly process, with the legs being extended until they touched the ground to level the stage. The pieces were held together with inner steel box sections curved on the outer curved edges, and a large ratchet strap was used to wrap around the entire structure and compress the circle inward, pulling all the pieces together. Overall, the design and construction of the circular stage was a challenging but rewarding project. We were able to meet all of the requirements set forth by the client and create a stage that was durable, stable, and easy to assemble and transport. ",
        'pudding':  "In order to assess the flood risk of Pudding Brooke, we first imported Digital Terrain Model LIDAR tiles into QGIS and used them to create contour polygons at 0.25m intervals. These contour polygons were then styled using a graduated color scheme, with each polygon being colored based on its elevation. This allowed us to easily visualize the topography of the area and identify areas that were prone to flooding. After creating the contour polygons, we selected potential sites for outbuildings in appropriate high ground locations. This was an important step in the flood risk assessment process, as we needed to ensure that any new structures that were built would be situated on high ground and therefore less vulnerable to flooding. To identify suitable locations for outbuildings, we carefully evaluated the contour polygons and selected sites that were located on the highest ground available. Overall, the use of Digital Terrain Model LIDAR tiles and contour polygons was essential in helping us to accurately assess the flood risk of Pudding Brooke and identify suitable sites for outbuildings. By carefully analyzing the topography of the area, we were able to make informed decisions about where it was safe to build, ensuring that any new structures would be protected from potential flooding.",
        'parish':  "In order to accurately assess the real estate market, our team utilized property sale data from the land registry and postal code data from the Ordnance Survey to determine the latitude and longitude coordinates of each house sale. This data was then imported into a PostGIS database, where an SQL query was run to calculate the average home price for each parish. To facilitate the visualization and analysis of this information, we utilized the powerful mapping software QGIS. By coloring the polygons representing each parish based on the average price, we were able to clearly and intuitively display the variations in the housing market across the region. This process allowed us to gain a detailed and nuanced understanding of the real estate market, and to identify trends and patterns that would not have been immediately apparent without the use of spatial analysis. By combining the robust data management capabilities of PostGIS with the intuitive mapping capabilities of QGIS, we were able to effectively and efficiently analyze complex data sets and extract valuable insights.",
        'parcel':   "In order to effectively analyze and visualize real estate data, it is important to first properly organize and process the data. To this end, our team combined three separate files containing price paid data into a single file and cleaned and filtered the data through a series of steps. These steps included the removal of quotes, the selection of only rows with GL followed by a number, the printing of certain columns, the addition of column names, and the deletion of rows with null values. Once the data was cleaned and organized, we used the powerful tool ogr2ogr to convert a file with cadastral parcel information into a PostgreSQL file. We then changed the projection from OSGB to WGS84 and imported it into a database. In order to store the data in a structured manner, we started a psql session and created empty tables with certain columns in the database. Next, we used the \copy command and SQL JOIN to combine the price and coordinates data based on their shared postcodes. We added a column for geometry data and used the latitude and longitude data to create points. We then calculated the average value for each of the duplicate polygons. Finally, we used the powerful mapping software QGIS to export the table from the database and modified the layer properties for visual appeal. Through this process, we were able to effectively organize and analyze the real estate data, allowing us to extract valuable insights and gain a deeper understanding of the market. During our analysis of real estate data, we encountered an issue with some of the postal codes not being properly associated with the intended polygons. This issue had the potential to significantly impact the accuracy and usefulness of our data. To address this issue and improve the accuracy of our data, we decided to use a different set of polygons (parishes) with a lower resolution for the next project. We hoped that this approach would help to more accurately associate the postal codes with the intended polygons, resulting in a more reliable dataset.",
        'node':   "",
        'egg':  "As engineers and designers, we are often approached with unusual and challenging requests. One such request came from an artist who asked us to help find a suitable geometry for a large egg sculpture. Intrigued by the opportunity to collaborate with an artist and apply our skills in a creative context, we set out to identify possible geometries using generative algorithms in Grasshopper 3D. The first step in our process was to understand the constraints and requirements of the project. The artist provided us with a set of parameters, including the desired size and shape of the sculpture, as well as the materials that would be used to construct it. With this information in hand, we began to explore different algorithmic approaches that could be used to generate a range of possible geometries. We turned to Grasshopper 3D, a powerful tool for generative design that allows users to define and manipulate geometry through a series of algorithmic rules. Using a combination of mathematical functions and input from the artist, we were able to generate a range of potential geometries for the egg sculpture. To narrow down our options and select the most suitable geometry, we used a variety of methods to evaluate and compare the different options. We considered factors such as structural integrity, ease of fabrication, and aesthetic appeal, and used computer simulations and physical prototypes to test the performance of the different geometries. In the end, we were able to identify a geometry that met all of the requirements and constraints of the project. The artist was pleased with the result and used our geometry to create a stunning egg sculpture that was well-received by the public. This project was a rewarding and exciting example of the ways in which engineering and design can intersect with the arts. By using generative algorithms and a collaborative approach, we were able to help an artist realize their vision and create a beautiful work of art.",
        'dymaxion':  "",
        'concentrator':  "",
        'clamp':  "Wireless access points and point-to-point links have been installed on the aluminum extrusion structural elements of outdoor event marquees using a innovative system that employs a keeder rail. The keeder rail accommodates a cylindrical metal piece with a threaded hole drilled perpendicular to its length, which can be easily secured in place by turning a large, flat disk with a threaded hole in the center. This setup supports a pipe clamp that is designed to fit standard aluminum poles, with two clamps used per pole to securely anchor the pole vertically on the side of the tent. This innovative method of installation allows for reliable and secure connectivity during events, while also maintaining the aesthetic integrity of the marquees.",
        'bha':  "The Ordnance Survey Mastermap Topography Layer, the Building Height Attribute (BHA), and the Environment Agency LiDAR Digital Terrain Model (DTM) are all useful data sources that can be used to create 3D models of buildings. By combining this data and using the Qgis2ThreeJS plugin in QGIS, it is possible to visualize the BHA data in 3D and create a 3D model of a building. To do this, the Qgis2ThreeJS plugin must be installed and the BHA data, DTM data, and any additional desired layers must be loaded into the QGIS project. The plugin can then be used to style the BHA data and specify the desired height attribute for extrusion, resulting in a 3D model of the building. This model can be saved as an HTML file and viewed in a web browser. When combined with the LiDAR DTM, the resulting 3D model is fairly accurate and can be opened in Grasshopper, a visual programming language and environment that runs within the Rhinoceros 3D CAD application. With the addition of the Ladybug plugin, this 3D model can be used to perform detailed analyses of climate data and create customized, interactive visualizations for environmentally-informed design, such as sunlight studies.",
        'aonb':  "We often use GIS software to help us identify the most suitable areas for building development. One way we do this is by importing topographic polygons from the OS MasterMap into the software and using the buffer tool to create lines around these polygons. This allows us to see where we are permitted to build based on various zoning and regulatory restrictions. For example, in areas of outstanding beauty, outbuildings with a floor area of over 10m2 must be located within 20 meters of the main dwelling house. To identify the areas where we can build outbuildings in compliance with this regulation, we use the buffer tool with a radius of 20 meters around the main dwelling house polygon. This creates a line around the dwelling house that represents the area within which we are permitted to build outbuildings.Additionally, if the proposed outbuilding is located within 2 meters of the property boundary, it is limited in overall height to only 2.4 meters. To help us identify the best area to build within these constraints, we create a buffer around the property boundary using the buffer tool. The area where the buffer around the dwelling house overlaps the inverse of the buffer around the property boundary represents the area where we are allowed to build an outbuilding with a pitched roof up to 4 meters tall (with an eaves height of 2.5 meters) or a flat roof up to 3 meters tall. By using these GIS tools, we are able to efficiently and accurately identify the most suitable areas for building development.",
        'van':  "As engineers and designers, it is our duty to create structures that not only function well, but also enhance the lives of those who use them. This is particularly important in the design of motor caravans, which serve as both vehicles and living spaces for travelers. With this in mind, we set out to design a caravan that prioritized both comfort and practicality. The first step in our process was to choose the most suitable materials and construction techniques. We decided to use a thick layer of spray foam as the foundation for the caravan's shape, which was then carved back to the desired form and rendered with acrylic putty. This method allowed us to create a strong and lightweight structure, while also providing excellent insulation to keep the interior comfortable. Next, we focused on the layout of the interior space. We installed a single bed lengthways, with a desk running parallel to it. This arrangement allowed for maximum use of the limited space, while also providing a comfortable and functional sleeping and working area. In addition, we designed the layout in such a way that the user can easily walk from the back of the caravan to the side door unhindered, which gives flexibility in terms of access and egress. To ensure practicality, we also included a bulkhead kitchen with a water-saving faucet, a full-size fridge, and a hob. These features allow the user to easily prepare meals and store food while on the road. We also installed double-layered Ikea blackout blinds and windows all around to provide privacy and regulate light and temperature within the caravan. Overall, our design for this motor caravan prioritizes both comfort and practicality, making it an ideal living space for travelers. By carefully considering the materials, layout, and features, we have created a functional and enjoyable space that will enhance the experience of those who use it."
      };

      const Graph = ForceGraph3D()(document.getElementById('3d-graph'))
  .nodeThreeObject(({ img }) => {
    const imgTexture = new THREE.TextureLoader().load(`./imgs/${img}`);
    const material = new THREE.SpriteMaterial({ map: imgTexture });
    const sprite = new THREE.Sprite(material);
    sprite.scale.set(12, 12);
    return sprite;
  })

  .backgroundColor('#333') // Set background color to dark grey
  .linkWidth(3) // Set link width to 2
  .linkColor('#FF1CE3')
  .linkOpacity([0.2])
  .linkCurvature([0])
  .linkCurveRotation([0])
  .onNodeClick(node => {
    setInterval(function() {
 // Graph.linkVisibility(false);
}, 3000)
    // When a node is clicked, toggle the info window for that node
    toggleInfoWindow(node.id);
    // Aim at node from outside it

    // hide links after timer elapsed

    let distance = 50;
    const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);

    const newPos = node.x || node.y || node.z
      ? { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }
      : { x: 0, y: 0, z: distance }; // special case if node is in (0,0,0)

    Graph.cameraPosition(newPos, node, 3000);
  })


  
  .onNodeRightClick(node => {
    setInterval(function() {
 // Graph.linkVisibility(true);
}, 3000);
    // When a node is clicked, toggle the info window for that node
    toggleInfoWindow(node.id);
    // Aim at node from outside it
    //Graph.linkVisibility(true)
    let distance = 200;
    const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);

    const newPos = node.x || node.y || node.z
      ? { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }
      : { x: 0, y: 0, z: distance }; // special case if node is in (0,0,0)

    Graph.cameraPosition(newPos, node, 1000);
  })

  .graphData(gData)

window.addEventListener('resize', function() {
  // Update the size of the graph
  Graph.width(window.innerWidth);
  Graph.height(window.innerHeight);
});

function displayNodeInfo(nodeId, text) {
  const nodeText = document.getElementById('node-text');
  nodeText.textContent = text;
}

// Function to toggle the info window for a given node
function toggleInfoWindow(nodeId) {
    // Reference the info-window element
    const infoWindow = document.getElementById('info-window');
    // Update the textContent of the info-window to match the clicked node
    infoWindow.textContent = nodeInfo[nodeId];
    // Display the info-window
    infoWindow.style.display = 'block';
}

  </script>
</body>

corridors.md
 deepl.md
 deeplapi.md
 fedoracoreosraspberrypi4.md
 fedoraworkstation.md
 floodrisk.md
 influxdb.md
 leastcostpath.md
 microclimate.md
 microclimates.md
 openaiapi.md
 parcel.md
 parish.md
 platform.md
 platformasaservice.md
 podman.md
 polygon.md
 postgis.md
 postgisdatabaseserver.md
 pricepaidparcels.md
 pricepaidparish.md
 pride.md
 provisioning.md
 pudding.md
 qgis.md
 queryworkings.md
 rclone.md
 renamealllinuxfrendly.md
 renaming.md
 saas.md
 setup.md
 solar.md
 stone.md
 sun.md
 sunshading.md
 corridors.md
 deepl.md
 deeplapi.md
 fedoracoreosraspberrypi4.md
 fedoraworkstation.md
 floodrisk.md
 influxdb.md
 leastcostpath.md
 microclimate.md
 microclimates.md
 openaiapi.md
 parcel.md
 parish.md
 platform.md
 platformasaservice.md
 podman.md
 polygon.md
 postgis.md
 postgisdatabaseserver.md
 pricepaidparcels.md
 pricepaidparish.md
 pride.md
 provisioning.md
 pudding.md
 qgis.md
 queryworkings.md
 rclone.md
 renamealllinuxfrendly.md
 renaming.md
 saas.md
 setup.md
 solar.md
 stone.md
 sun.md
 sunshading.md
 systemd.md
 thermocouple.md
 truss.md
 using-openai-api.md
 vertical.md
 wight.md
 wildlife.md
 wildlifecorridor.md
 windsor.md
 womad.md
 workings.md


